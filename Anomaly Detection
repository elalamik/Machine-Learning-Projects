{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## MLC HW 4\n",
    "\n",
    "### Question 1 (40 points)\n",
    "\n",
    "In this question, you will model traffic counts in Pittsburgh using Gaussian process (GP) regression.  The included dataset, \"PittsburghTrafficCounts.csv\", represents the average daily traffic counts computed by traffic sensors at over 1,100 locations in Allegheny County, PA.  The data was collected from years 2012-2014 and compiled by Carnegie Mellon University’s Traffic21 Institute; we have the longitude, latitude, and average daily count for each sensor.  \n",
    "\n",
    "Given this dataset, your goal is to learn a model of traffic count as a function of spatial location.  To do so, fit a Gaussian Process regression model to the observed data.  While you can decide on the precise kernel specification, you should try to achieve a good model fit, as quantified by a log marginal likelihood value greater than (i.e., less negative than) -1400.  Here are some hints for getting a good model fit:\n",
    "\n",
    "* We recommend that you take the logarithm of the traffic counts, and then subtract the mean of this vector, before fitting the model.\n",
    "\n",
    "* Since the data is noisy, don't forget to include a noise term (WhiteKernel) in your model.\n",
    "\n",
    "* When fitting a GP with RBF kernel on multidimensional data, you can learn a separate length scale for each dimension, e.g., length_scale=(length_scale_x, length_scale_y). \n",
    "\n",
    "Your Python code should provide the following five outputs:\n",
    "\n",
    "1) The kernel after parameter optimization and fitting to the observed data. (10 pts)\n",
    "\n",
    "2) The log marginal likelihood of the training data. (5 pts)\n",
    "\n",
    "3) Show a 2-D plot of the model's predictions over a mesh grid of longitude/latitude (with color corresponding to the model's predictions) and overlay a 2-D scatter plot of sensor locations (with color corresponding to the observed values). (10 pts)\n",
    "\n",
    "4) What percentage of sensors have average traffic counts more than two standard deviations higher or lower than the model predicts given their spatial location? (5 pts)\n",
    "\n",
    "5) Show a 2-D scatter plot of the sensor locations, with three colors corresponding to observed values a) more than two standard deviations higher than predicted, b) more then two standard deviations lower than predicted, and c) within two standard deviations of the predicted values. (10 pts)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>AvgDailyTrafficCount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>-80.278366</td>\n",
       "      <td>40.468606</td>\n",
       "      <td>84.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>-80.162117</td>\n",
       "      <td>40.384598</td>\n",
       "      <td>95.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>-80.221205</td>\n",
       "      <td>40.366778</td>\n",
       "      <td>97.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>-80.142455</td>\n",
       "      <td>40.622084</td>\n",
       "      <td>111.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>-80.131975</td>\n",
       "      <td>40.544915</td>\n",
       "      <td>125.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>-80.139674</td>\n",
       "      <td>40.623590</td>\n",
       "      <td>126.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>-79.813385</td>\n",
       "      <td>40.583852</td>\n",
       "      <td>134.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>-80.132048</td>\n",
       "      <td>40.537038</td>\n",
       "      <td>136.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>-80.278168</td>\n",
       "      <td>40.466386</td>\n",
       "      <td>136.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>-80.138849</td>\n",
       "      <td>40.591467</td>\n",
       "      <td>141.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Longitude   Latitude  AvgDailyTrafficCount\n",
       "0 -80.278366  40.468606                  84.0\n",
       "1 -80.162117  40.384598                  95.0\n",
       "2 -80.221205  40.366778                  97.0\n",
       "3 -80.142455  40.622084                 111.0\n",
       "4 -80.131975  40.544915                 125.0\n",
       "5 -80.139674  40.623590                 126.0\n",
       "6 -79.813385  40.583852                 134.0\n",
       "7 -80.132048  40.537038                 136.0\n",
       "8 -80.278168  40.466386                 136.0\n",
       "9 -80.138849  40.591467                 141.0"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import math\n",
    "Data1=pd.read_csv(\"PittsburghTrafficCounts.csv\")\n",
    "Data1.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.gaussian_process import GaussianProcessRegressor\n",
    "from sklearn.gaussian_process.kernels import RBF, ConstantKernel,WhiteKernel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      -3.977526\n",
       "1      -3.854466\n",
       "2      -3.833632\n",
       "3      -3.698812\n",
       "4      -3.580029\n",
       "          ...   \n",
       "1110    1.096755\n",
       "1111    1.117757\n",
       "1112    1.125674\n",
       "1113    1.150681\n",
       "1114    1.200170\n",
       "Name: AvgDailyTrafficCount, Length: 1115, dtype: float64"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = Data1.iloc[:,:2]\n",
    "y = Data1.iloc[:,-1]\n",
    "logy = np.log(y)\n",
    "y = logy - logy.mean()\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>AvgDailyTrafficCount</th>\n",
       "      <th>logavgtraffic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>-80.278366</td>\n",
       "      <td>40.468606</td>\n",
       "      <td>84.0</td>\n",
       "      <td>-3.977526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>-80.162117</td>\n",
       "      <td>40.384598</td>\n",
       "      <td>95.0</td>\n",
       "      <td>-3.854466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>-80.221205</td>\n",
       "      <td>40.366778</td>\n",
       "      <td>97.0</td>\n",
       "      <td>-3.833632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>-80.142455</td>\n",
       "      <td>40.622084</td>\n",
       "      <td>111.0</td>\n",
       "      <td>-3.698812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>-80.131975</td>\n",
       "      <td>40.544915</td>\n",
       "      <td>125.0</td>\n",
       "      <td>-3.580029</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Longitude   Latitude  AvgDailyTrafficCount  logavgtraffic\n",
       "0 -80.278366  40.468606                  84.0      -3.977526\n",
       "1 -80.162117  40.384598                  95.0      -3.854466\n",
       "2 -80.221205  40.366778                  97.0      -3.833632\n",
       "3 -80.142455  40.622084                 111.0      -3.698812\n",
       "4 -80.131975  40.544915                 125.0      -3.580029"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Data1['logavgtraffic'] = y\n",
    "Data1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1) The kernel after parameter optimization and fitting to the observed data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "kernel = 1* RBF(length_scale = (1.,1.), length_scale_bounds = (1e-3, 1e3))\\\n",
    "    + WhiteKernel(noise_level=1.,  noise_level_bounds=(1e-3, 1e3))\n",
    "gp = GaussianProcessRegressor(kernel=kernel, random_state=123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n",
       "                         kernel=1**2 * RBF(length_scale=[1, 1]) + WhiteKernel(noise_level=1),\n",
       "                         n_restarts_optimizer=0, normalize_y=False,\n",
       "                         optimizer='fmin_l_bfgs_b', random_state=123)"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gp.fit(X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred, sigma = gp.predict(X, return_std=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The kernel after parameter optimization and fitting is \n",
      "0.658**2 * RBF(length_scale=[0.0326, 0.0395]) + WhiteKernel(noise_level=0.568)\n"
     ]
    }
   ],
   "source": [
    "print('The kernel after parameter optimization and fitting is \\n{}'.format(gp.kernel_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-1.59211776, -0.8003362 , -1.28812414, ...,  0.5113557 ,\n",
       "        0.28981815,  0.66345558])"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2) The log marginal likelihood of the training data. (5 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The log marginal likelihood is -1365.323931477893\n"
     ]
    }
   ],
   "source": [
    "print('The log marginal likelihood is {}'.format(gp.log_marginal_likelihood_value_))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3) Show a 2-D plot of the model's predictions over a mesh grid of longitude/latitude (with color corresponding to the model's predictions) and overlay a 2-D scatter plot of sensor locations (with color corresponding to the observed values). (10 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "min_long = Data1['Longitude'].min()\n",
    "max_long = Data1['Longitude'].max()\n",
    "min_lat = Data1['Latitude'].min()\n",
    "max_lat = Data1['Latitude'].max()\n",
    "\n",
    "from scipy.interpolate import griddata\n",
    "import pylab as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/ndgriddata.py:201: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n",
      "  if ndim == 1 and method in ('nearest', 'linear', 'cubic'):\n",
      "/opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/ndgriddata.py:217: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n",
      "  elif method == 'nearest':\n",
      "/opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/ndgriddata.py:220: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n",
      "  elif method == 'linear':\n",
      "/opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/ndgriddata.py:224: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n",
      "  elif method == 'cubic' and ndim == 2:\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "Unknown interpolation method array([[-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       ...,\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838]]) for 1 dimensional data",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-72-a34d7c181564>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mz\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mData1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Longitude'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mData1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Latitude'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mData1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'AvgDailyTrafficCount'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mzi\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgriddata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mz\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mxi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0myi\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.7/site-packages/scipy/interpolate/ndgriddata.py\u001b[0m in \u001b[0;36mgriddata\u001b[0;34m(points, values, xi, method, fill_value, rescale)\u001b[0m\n\u001b[1;32m    228\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    229\u001b[0m         raise ValueError(\"Unknown interpolation method %r for \"\n\u001b[0;32m--> 230\u001b[0;31m                          \"%d dimensional data\" % (method, ndim))\n\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m: Unknown interpolation method array([[-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       ...,\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838],\n       [-80.31494883, -80.31438058, -80.31381233, ..., -79.68305488,\n        -79.68248663, -79.68191838]]) for 1 dimensional data"
     ]
    }
   ],
   "source": [
    "numcols, numrows = 1115, 1115\n",
    "xi = np.linspace(min_long, max_long, numcols)\n",
    "yi = np.linspace(min_lat, max_lat, numrows)\n",
    "xi, yi = np.meshgrid(xi, yi)\n",
    "\n",
    "x, y, z = Data1['Longitude'].values, Data1['Latitude'].values, Data1['AvgDailyTrafficCount'].values\n",
    "zi = griddata(x, y, z, xi, yi)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "im = ax.contourf(xi, yi, zi)\n",
    "ax.scatter(Data1['Longitude'], Data1['Latitude'], c = Data1['AvgDailyTrafficCount'], s=100,\n",
    "           vmin=zi.min(), vmax=zi.max())\n",
    "fig.colorbar(im)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4) What percentage of sensors have average traffic counts more than two standard deviations higher or lower than the model predicts given their spatial location? (5 pts)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "Data1['Pred'] = y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>AvgDailyTrafficCount</th>\n",
       "      <th>logavgtraffic</th>\n",
       "      <th>Pred</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>1115.000000</td>\n",
       "      <td>1115.000000</td>\n",
       "      <td>1115.000000</td>\n",
       "      <td>1.115000e+03</td>\n",
       "      <td>1115.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>-79.981176</td>\n",
       "      <td>40.457091</td>\n",
       "      <td>6042.008595</td>\n",
       "      <td>-9.283257e-15</td>\n",
       "      <td>0.007772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>0.134905</td>\n",
       "      <td>0.101651</td>\n",
       "      <td>3542.316093</td>\n",
       "      <td>9.454420e-01</td>\n",
       "      <td>0.527325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>-80.314949</td>\n",
       "      <td>40.198900</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>-3.977526e+00</td>\n",
       "      <td>-2.064946</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>-80.076972</td>\n",
       "      <td>40.389575</td>\n",
       "      <td>3029.250000</td>\n",
       "      <td>-3.922735e-01</td>\n",
       "      <td>-0.156381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>-79.975952</td>\n",
       "      <td>40.448163</td>\n",
       "      <td>5938.000000</td>\n",
       "      <td>2.807851e-01</td>\n",
       "      <td>0.149423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>-79.876250</td>\n",
       "      <td>40.524706</td>\n",
       "      <td>9241.000000</td>\n",
       "      <td>7.230627e-01</td>\n",
       "      <td>0.355258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>-79.681918</td>\n",
       "      <td>40.681718</td>\n",
       "      <td>14891.000000</td>\n",
       "      <td>1.200170e+00</td>\n",
       "      <td>0.731923</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Longitude     Latitude  AvgDailyTrafficCount  logavgtraffic  \\\n",
       "count  1115.000000  1115.000000           1115.000000   1.115000e+03   \n",
       "mean    -79.981176    40.457091           6042.008595  -9.283257e-15   \n",
       "std       0.134905     0.101651           3542.316093   9.454420e-01   \n",
       "min     -80.314949    40.198900             84.000000  -3.977526e+00   \n",
       "25%     -80.076972    40.389575           3029.250000  -3.922735e-01   \n",
       "50%     -79.975952    40.448163           5938.000000   2.807851e-01   \n",
       "75%     -79.876250    40.524706           9241.000000   7.230627e-01   \n",
       "max     -79.681918    40.681718          14891.000000   1.200170e+00   \n",
       "\n",
       "              Pred  \n",
       "count  1115.000000  \n",
       "mean      0.007772  \n",
       "std       0.527325  \n",
       "min      -2.064946  \n",
       "25%      -0.156381  \n",
       "50%       0.149423  \n",
       "75%       0.355258  \n",
       "max       0.731923  "
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Data1.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "below = (Data1.Pred.where(Data1.Pred>Data1.Pred.mean()- 2* Data1.Pred.std())).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9381165919282511"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "below/Data1.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5) Show a 2-D scatter plot of the sensor locations, with three colors corresponding to observed values a) more than two standard deviations higher than predicted, b) more then two standard deviations lower than predicted, and c) within two standard deviations of the predicted values. (10 pts)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "### Question 2: Cluster-based anomaly detection (10 points)\n",
    "\n",
    "Given an unlabeled dataset with two real-valued attributes, we perform cluster-based anomaly detection by running k-means, choosing the number of clusters k automatically using the Schwarz criterion.  Four clusters are formed:\n",
    "\n",
    "A: 100 points, center (0, 0), standard deviation 0.1\n",
    "\n",
    "B: 150 points, center (35, 5), standard deviation 5\n",
    "\n",
    "C: 2 points, center (15, 20), standard deviation 1\n",
    "\n",
    "D: 200 points, center (10, 10), standard deviation 1\n",
    "\n",
    "Given the four points below, which of these points are, and are not, likely to be anomalies?  Choose “Anomaly” or “Not Anomaly”, and provide a brief explanation, for each point. \n",
    "(Hint: your answers should take into account the size and standard deviation of each cluster as well as the distances to cluster centers.)\n",
    "\n",
    "(1, 0)\t\tAnomaly / Not Anomaly\n",
    "\n",
    "\n",
    "(35, 2)\t\tAnomaly / Not Anomaly\n",
    "\n",
    "\n",
    "(15, 19)\tAnomaly / Not Anomaly\n",
    "\n",
    "\n",
    "(10, 11)\tAnomaly / Not Anomaly\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Given 4 clusters:\n",
    "## (1,0): Anomaly, because it is not a good fit for any of the clusters. It is the closest to cluster A, which is very dense in size. However, the fact that its standard deviation is 0.1 makes this point way too far from cluster center A. It is indeed more than 4 standard deviations above all cluster centers.\n",
    "## (35,2): Not Anomaly. It is less than 4 standard deviation away from Cluster Center B, which is the closest cluster. On top of this, this cluster is very dense in size, making this point normal.\n",
    "## (15,19): Anomaly, because it is the closest to cluster, which might not be a real cluster given it has only 2 points compared to the other clusters that are very dense.  It is also not a good fit for the other clusters, because it is more than 4 standard deviations away from the other cluster cents.\n",
    "## (10,11): Not Anomaly. It is less than 4 standard deviations away from Cluster Center C, which is the closest center. On top of this, this cluster is very dense in size, making this point normal."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 3: Anomaly detection (50 points)\n",
    "\n",
    "For this question, use the \"County Health Indicators\" dataset provided to identify the most anomalous counties. Please list the top 5 most anomalous counties computed using each of the following models.  (We recommend that, as a pre-processing step, you drop na values, and make sure all numeric values are treated as floats not strings.)\n",
    "\n",
    "Part 1: Learn a Bayesian network structure using only the six features [\"'\\% Smokers'\",\"'\\% Obese'\",\"'Violent Crime Rate'\",\"'80/20 Income Ratio'\",\"'\\% Children in Poverty'\",\"'Average Daily PM2.5'\"].  Use pd.cut() to discretize each feature into 5 categories: 0,1,2,3,4. \n",
    "\n",
    "(a) Use HillClimbSearch and BicScore to learn the Bayesian network structure (5 pts) \n",
    "\n",
    "(b) Which 5 counties have the lowest (most negative) log-likelihood values? Please show a ranked list of the top counties' names and log-likelihood values. (10 pts)\n",
    "\n",
    "Part 2: Cluster based anomaly detection.  Use all numeric features for this part, and do not discretize. \n",
    "\n",
    "(a) Clustering with k-means. Please use k=3 clusters. Compute each record's distance to the nearest cluster center and report the five counties which have the longest distances. (10 pts)\n",
    "\n",
    "(b) Cluster with Gaussian Mixture. Please repeat (2)a but use log-likelihood for each record (rather than distance) as the measure of anomalousness. (10 pts)\n",
    "\n",
    "Part 3: Choose one more anomaly detection model you prefer and report the top 5 most anomalous counties by the model you chose.  (10 pts)\n",
    "\n",
    "Part 4: Compare and contrast the results from the different models.  Were there some counties that were found to be anomalous in some models and not in others?  Please provide some intuitions on why each county was found to be anomalous. (5 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>'\\% Reporting Fair/Poor Health'</th>\n",
       "      <th>'Physically Unhealthy Days Per Month'</th>\n",
       "      <th>'Mentally Unhealthy Days Per Month'</th>\n",
       "      <th>'\\% Low birth weight births'</th>\n",
       "      <th>'\\% Smokers'</th>\n",
       "      <th>'\\% Obese'</th>\n",
       "      <th>'Food Environment Index'</th>\n",
       "      <th>'\\% Physically Inactive'</th>\n",
       "      <th>'\\% With Access To Exercise'</th>\n",
       "      <th>...</th>\n",
       "      <th>'\\% Children in Poverty'</th>\n",
       "      <th>'80/20 Income Ratio'</th>\n",
       "      <th>'\\% Single-Parent Households'</th>\n",
       "      <th>'Association Rate'</th>\n",
       "      <th>'Violent Crime Rate'</th>\n",
       "      <th>'Injury Death Rate'</th>\n",
       "      <th>'Average Daily PM2.5'</th>\n",
       "      <th>'\\% Severe Housing Problems'</th>\n",
       "      <th>'\\% Drive Alone'</th>\n",
       "      <th>'\\% Long Commute - Drives Alone'</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Autauga, Alabama</td>\n",
       "      <td>19</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.3</td>\n",
       "      <td>9</td>\n",
       "      <td>19</td>\n",
       "      <td>31</td>\n",
       "      <td>7.1</td>\n",
       "      <td>29</td>\n",
       "      <td>71</td>\n",
       "      <td>...</td>\n",
       "      <td>18</td>\n",
       "      <td>4.3</td>\n",
       "      <td>27</td>\n",
       "      <td>13.8</td>\n",
       "      <td>254</td>\n",
       "      <td>76</td>\n",
       "      <td>12.9</td>\n",
       "      <td>14</td>\n",
       "      <td>89</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Baldwin, Alabama</td>\n",
       "      <td>16</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.2</td>\n",
       "      <td>9</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>7.6</td>\n",
       "      <td>25</td>\n",
       "      <td>72</td>\n",
       "      <td>...</td>\n",
       "      <td>20</td>\n",
       "      <td>4.5</td>\n",
       "      <td>28</td>\n",
       "      <td>12.0</td>\n",
       "      <td>221</td>\n",
       "      <td>70</td>\n",
       "      <td>13.1</td>\n",
       "      <td>15</td>\n",
       "      <td>84</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Barbour, Alabama</td>\n",
       "      <td>26</td>\n",
       "      <td>4.9</td>\n",
       "      <td>4.7</td>\n",
       "      <td>12</td>\n",
       "      <td>21</td>\n",
       "      <td>41</td>\n",
       "      <td>5.1</td>\n",
       "      <td>33</td>\n",
       "      <td>45</td>\n",
       "      <td>...</td>\n",
       "      <td>38</td>\n",
       "      <td>5.3</td>\n",
       "      <td>54</td>\n",
       "      <td>8.1</td>\n",
       "      <td>147</td>\n",
       "      <td>64</td>\n",
       "      <td>12.6</td>\n",
       "      <td>18</td>\n",
       "      <td>84</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Bibb, Alabama</td>\n",
       "      <td>22</td>\n",
       "      <td>4.8</td>\n",
       "      <td>4.6</td>\n",
       "      <td>12</td>\n",
       "      <td>21</td>\n",
       "      <td>40</td>\n",
       "      <td>7.4</td>\n",
       "      <td>33</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>27</td>\n",
       "      <td>4.3</td>\n",
       "      <td>32</td>\n",
       "      <td>9.8</td>\n",
       "      <td>236</td>\n",
       "      <td>75</td>\n",
       "      <td>12.9</td>\n",
       "      <td>13</td>\n",
       "      <td>84</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Blount, Alabama</td>\n",
       "      <td>21</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.5</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>32</td>\n",
       "      <td>8.3</td>\n",
       "      <td>29</td>\n",
       "      <td>26</td>\n",
       "      <td>...</td>\n",
       "      <td>24</td>\n",
       "      <td>4.1</td>\n",
       "      <td>28</td>\n",
       "      <td>8.5</td>\n",
       "      <td>219</td>\n",
       "      <td>89</td>\n",
       "      <td>12.7</td>\n",
       "      <td>12</td>\n",
       "      <td>85</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             County '\\% Reporting Fair/Poor Health'  \\\n",
       "0  Autauga, Alabama                              19   \n",
       "1  Baldwin, Alabama                              16   \n",
       "2  Barbour, Alabama                              26   \n",
       "3     Bibb, Alabama                              22   \n",
       "4   Blount, Alabama                              21   \n",
       "\n",
       "  'Physically Unhealthy Days Per Month' 'Mentally Unhealthy Days Per Month'  \\\n",
       "0                                   4.4                                 4.3   \n",
       "1                                   4.1                                 4.2   \n",
       "2                                   4.9                                 4.7   \n",
       "3                                   4.8                                 4.6   \n",
       "4                                   4.6                                 4.5   \n",
       "\n",
       "  '\\% Low birth weight births' '\\% Smokers'  '\\% Obese'  \\\n",
       "0                            9           19          31   \n",
       "1                            9           19          27   \n",
       "2                           12           21          41   \n",
       "3                           12           21          40   \n",
       "4                            7           19          32   \n",
       "\n",
       "   'Food Environment Index'  '\\% Physically Inactive'  \\\n",
       "0                       7.1                        29   \n",
       "1                       7.6                        25   \n",
       "2                       5.1                        33   \n",
       "3                       7.4                        33   \n",
       "4                       8.3                        29   \n",
       "\n",
       "  '\\% With Access To Exercise'  ... '\\% Children in Poverty'  \\\n",
       "0                           71  ...                       18   \n",
       "1                           72  ...                       20   \n",
       "2                           45  ...                       38   \n",
       "3                           33  ...                       27   \n",
       "4                           26  ...                       24   \n",
       "\n",
       "  '80/20 Income Ratio' '\\% Single-Parent Households' 'Association Rate'  \\\n",
       "0                  4.3                            27               13.8   \n",
       "1                  4.5                            28               12.0   \n",
       "2                  5.3                            54                8.1   \n",
       "3                  4.3                            32                9.8   \n",
       "4                  4.1                            28                8.5   \n",
       "\n",
       "  'Violent Crime Rate' 'Injury Death Rate' 'Average Daily PM2.5'  \\\n",
       "0                  254                  76                  12.9   \n",
       "1                  221                  70                  13.1   \n",
       "2                  147                  64                  12.6   \n",
       "3                  236                  75                  12.9   \n",
       "4                  219                  89                  12.7   \n",
       "\n",
       "  '\\% Severe Housing Problems' '\\% Drive Alone'  \\\n",
       "0                           14               89   \n",
       "1                           15               84   \n",
       "2                           18               84   \n",
       "3                           13               84   \n",
       "4                           12               85   \n",
       "\n",
       "  '\\% Long Commute - Drives Alone'  \n",
       "0                               42  \n",
       "1                               37  \n",
       "2                               35  \n",
       "3                               46  \n",
       "4                               59  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Data2=pd.read_csv(\"2016CountyHealthIndicators.csv\")\n",
    "Data2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "Data2 = Data2.replace({'?':np.nan}).dropna()\n",
    "Data2.dropna(subset = ['County'], inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "county = Data2.County"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "Data2 = Data2.iloc[:,1:].astype(float)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>'\\% Reporting Fair/Poor Health'</th>\n",
       "      <th>'Physically Unhealthy Days Per Month'</th>\n",
       "      <th>'Mentally Unhealthy Days Per Month'</th>\n",
       "      <th>'\\% Low birth weight births'</th>\n",
       "      <th>'\\% Smokers'</th>\n",
       "      <th>'\\% Obese'</th>\n",
       "      <th>'Food Environment Index'</th>\n",
       "      <th>'\\% Physically Inactive'</th>\n",
       "      <th>'\\% With Access To Exercise'</th>\n",
       "      <th>...</th>\n",
       "      <th>'\\% Children in Poverty'</th>\n",
       "      <th>'80/20 Income Ratio'</th>\n",
       "      <th>'\\% Single-Parent Households'</th>\n",
       "      <th>'Association Rate'</th>\n",
       "      <th>'Violent Crime Rate'</th>\n",
       "      <th>'Injury Death Rate'</th>\n",
       "      <th>'Average Daily PM2.5'</th>\n",
       "      <th>'\\% Severe Housing Problems'</th>\n",
       "      <th>'\\% Drive Alone'</th>\n",
       "      <th>'\\% Long Commute - Drives Alone'</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Autauga, Alabama</td>\n",
       "      <td>19.0</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>7.1</td>\n",
       "      <td>29.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>...</td>\n",
       "      <td>18.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>27.0</td>\n",
       "      <td>13.8</td>\n",
       "      <td>254.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>12.9</td>\n",
       "      <td>14.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Baldwin, Alabama</td>\n",
       "      <td>16.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.2</td>\n",
       "      <td>9.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>25.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>...</td>\n",
       "      <td>20.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>28.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>221.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Barbour, Alabama</td>\n",
       "      <td>26.0</td>\n",
       "      <td>4.9</td>\n",
       "      <td>4.7</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>33.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>...</td>\n",
       "      <td>38.0</td>\n",
       "      <td>5.3</td>\n",
       "      <td>54.0</td>\n",
       "      <td>8.1</td>\n",
       "      <td>147.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>12.6</td>\n",
       "      <td>18.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Bibb, Alabama</td>\n",
       "      <td>22.0</td>\n",
       "      <td>4.8</td>\n",
       "      <td>4.6</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>7.4</td>\n",
       "      <td>33.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>...</td>\n",
       "      <td>27.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>32.0</td>\n",
       "      <td>9.8</td>\n",
       "      <td>236.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>12.9</td>\n",
       "      <td>13.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Blount, Alabama</td>\n",
       "      <td>21.0</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>29.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>...</td>\n",
       "      <td>24.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>8.5</td>\n",
       "      <td>219.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>12.7</td>\n",
       "      <td>12.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>59.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             County  '\\% Reporting Fair/Poor Health'  \\\n",
       "0  Autauga, Alabama                             19.0   \n",
       "1  Baldwin, Alabama                             16.0   \n",
       "2  Barbour, Alabama                             26.0   \n",
       "3     Bibb, Alabama                             22.0   \n",
       "4   Blount, Alabama                             21.0   \n",
       "\n",
       "   'Physically Unhealthy Days Per Month'  'Mentally Unhealthy Days Per Month'  \\\n",
       "0                                    4.4                                  4.3   \n",
       "1                                    4.1                                  4.2   \n",
       "2                                    4.9                                  4.7   \n",
       "3                                    4.8                                  4.6   \n",
       "4                                    4.6                                  4.5   \n",
       "\n",
       "   '\\% Low birth weight births'  '\\% Smokers'  '\\% Obese'  \\\n",
       "0                           9.0          19.0        31.0   \n",
       "1                           9.0          19.0        27.0   \n",
       "2                          12.0          21.0        41.0   \n",
       "3                          12.0          21.0        40.0   \n",
       "4                           7.0          19.0        32.0   \n",
       "\n",
       "   'Food Environment Index'  '\\% Physically Inactive'  \\\n",
       "0                       7.1                      29.0   \n",
       "1                       7.6                      25.0   \n",
       "2                       5.1                      33.0   \n",
       "3                       7.4                      33.0   \n",
       "4                       8.3                      29.0   \n",
       "\n",
       "   '\\% With Access To Exercise'  ...  '\\% Children in Poverty'  \\\n",
       "0                          71.0  ...                      18.0   \n",
       "1                          72.0  ...                      20.0   \n",
       "2                          45.0  ...                      38.0   \n",
       "3                          33.0  ...                      27.0   \n",
       "4                          26.0  ...                      24.0   \n",
       "\n",
       "   '80/20 Income Ratio'  '\\% Single-Parent Households'  'Association Rate'  \\\n",
       "0                   4.3                           27.0                13.8   \n",
       "1                   4.5                           28.0                12.0   \n",
       "2                   5.3                           54.0                 8.1   \n",
       "3                   4.3                           32.0                 9.8   \n",
       "4                   4.1                           28.0                 8.5   \n",
       "\n",
       "   'Violent Crime Rate'  'Injury Death Rate'  'Average Daily PM2.5'  \\\n",
       "0                 254.0                 76.0                   12.9   \n",
       "1                 221.0                 70.0                   13.1   \n",
       "2                 147.0                 64.0                   12.6   \n",
       "3                 236.0                 75.0                   12.9   \n",
       "4                 219.0                 89.0                   12.7   \n",
       "\n",
       "   '\\% Severe Housing Problems'  '\\% Drive Alone'  \\\n",
       "0                          14.0              89.0   \n",
       "1                          15.0              84.0   \n",
       "2                          18.0              84.0   \n",
       "3                          13.0              84.0   \n",
       "4                          12.0              85.0   \n",
       "\n",
       "   '\\% Long Commute - Drives Alone'  \n",
       "0                              42.0  \n",
       "1                              37.0  \n",
       "2                              35.0  \n",
       "3                              46.0  \n",
       "4                              59.0  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.merge(pd.Series(county),Data2, right_index = True, left_index = True)\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2486, 31)"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 1: Learn a Bayesian network structure using only the six features [\"'\\% Smokers'\",\"'\\% Obese'\",\"'Violent Crime Rate'\",\"'80/20 Income Ratio'\",\"'\\% Children in Poverty'\",\"'Average Daily PM2.5'\"].  Use pd.cut() to discretize each feature into 5 categories: 0,1,2,3,4."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>'\\% Smokers'</th>\n",
       "      <th>'\\% Obese'</th>\n",
       "      <th>'Violent Crime Rate'</th>\n",
       "      <th>'80/20 Income Ratio'</th>\n",
       "      <th>'\\% Children in Poverty'</th>\n",
       "      <th>'Average Daily PM2.5'</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Autauga, Alabama</td>\n",
       "      <td>19.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>254.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>18.0</td>\n",
       "      <td>12.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Baldwin, Alabama</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>221.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>20.0</td>\n",
       "      <td>13.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Barbour, Alabama</td>\n",
       "      <td>21.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>147.0</td>\n",
       "      <td>5.3</td>\n",
       "      <td>38.0</td>\n",
       "      <td>12.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Bibb, Alabama</td>\n",
       "      <td>21.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>236.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>27.0</td>\n",
       "      <td>12.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Blount, Alabama</td>\n",
       "      <td>19.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>219.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>24.0</td>\n",
       "      <td>12.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             County  '\\% Smokers'  '\\% Obese'  'Violent Crime Rate'  \\\n",
       "0  Autauga, Alabama          19.0        31.0                 254.0   \n",
       "1  Baldwin, Alabama          19.0        27.0                 221.0   \n",
       "2  Barbour, Alabama          21.0        41.0                 147.0   \n",
       "3     Bibb, Alabama          21.0        40.0                 236.0   \n",
       "4   Blount, Alabama          19.0        32.0                 219.0   \n",
       "\n",
       "   '80/20 Income Ratio'  '\\% Children in Poverty'  'Average Daily PM2.5'  \n",
       "0                   4.3                      18.0                   12.9  \n",
       "1                   4.5                      20.0                   13.1  \n",
       "2                   5.3                      38.0                   12.6  \n",
       "3                   4.3                      27.0                   12.9  \n",
       "4                   4.1                      24.0                   12.7  "
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1 = data[[\"County\",\"'\\% Smokers'\",\"'\\% Obese'\",\"'Violent Crime Rate'\",\"'80/20 Income Ratio'\",\"'\\% Children in Poverty'\",\"'Average Daily PM2.5'\"]].copy()\n",
    "data1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "for i in data1.iloc[:,1:]:\n",
    "    data1[i] = pd.qcut(data1[i], q = 5, labels=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>'\\% Smokers'</th>\n",
       "      <th>'\\% Obese'</th>\n",
       "      <th>'Violent Crime Rate'</th>\n",
       "      <th>'80/20 Income Ratio'</th>\n",
       "      <th>'\\% Children in Poverty'</th>\n",
       "      <th>'Average Daily PM2.5'</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Autauga, Alabama</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Baldwin, Alabama</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Barbour, Alabama</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Bibb, Alabama</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Blount, Alabama</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             County  '\\% Smokers'  '\\% Obese'  'Violent Crime Rate'  \\\n",
       "0  Autauga, Alabama             2           2                     2   \n",
       "1  Baldwin, Alabama             2           0                     2   \n",
       "2  Barbour, Alabama             3           4                     1   \n",
       "3     Bibb, Alabama             3           4                     2   \n",
       "4   Blount, Alabama             2           2                     2   \n",
       "\n",
       "   '80/20 Income Ratio'  '\\% Children in Poverty'  'Average Daily PM2.5'  \n",
       "0                     1                         1                      3  \n",
       "1                     2                         1                      3  \n",
       "2                     4                         4                      3  \n",
       "3                     1                         3                      3  \n",
       "4                     1                         2                      3  "
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2486, 7)"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (a) Use HillClimbSearch and BicScore to learn the Bayesian network structure (5 pts) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pgmpy.estimators import HillClimbSearch\n",
    "from pgmpy.estimators import BicScore\n",
    "from pgmpy.models import BayesianModel\n",
    "from pgmpy.estimators import MaximumLikelihoodEstimator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(\"'\\\\% Smokers'\", \"'\\\\% Obese'\"), (\"'\\\\% Smokers'\", \"'\\\\% Children in Poverty'\"), (\"'\\\\% Smokers'\", \"'Average Daily PM2.5'\"), (\"'80/20 Income Ratio'\", \"'Violent Crime Rate'\"), (\"'\\\\% Children in Poverty'\", \"'80/20 Income Ratio'\")]\n"
     ]
    }
   ],
   "source": [
    "data_hc = data1.iloc[:,1:]\n",
    "hc = HillClimbSearch(data_hc, scoring_method = BicScore(data_hc))\n",
    "best_model = hc.estimate()\n",
    "print(best_model.edges())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPD of '80/20 Income Ratio':\n",
      "+--------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n",
      "| '\\% Children in Poverty' | '\\% Children in Poverty'(0) | '\\% Children in Poverty'(1) | '\\% Children in Poverty'(2) | '\\% Children in Poverty'(3) | '\\% Children in Poverty'(4) |\n",
      "+--------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n",
      "| '80/20 Income Ratio'(0)  | 0.5103969754253308          | 0.344294003868472           | 0.13837638376383765         | 0.08888888888888889         | 0.04017857142857143         |\n",
      "+--------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n",
      "| '80/20 Income Ratio'(1)  | 0.2627599243856333          | 0.23597678916827852         | 0.25092250922509224         | 0.17333333333333334         | 0.06919642857142858         |\n",
      "+--------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n",
      "| '80/20 Income Ratio'(2)  | 0.12098298676748583         | 0.22437137330754353         | 0.23616236162361623         | 0.2111111111111111          | 0.13169642857142858         |\n",
      "+--------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n",
      "| '80/20 Income Ratio'(3)  | 0.06427221172022685         | 0.13539651837524178         | 0.24723247232472326         | 0.28444444444444444         | 0.21875                     |\n",
      "+--------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n",
      "| '80/20 Income Ratio'(4)  | 0.04158790170132325         | 0.059961315280464215        | 0.12730627306273062         | 0.24222222222222223         | 0.5401785714285714          |\n",
      "+--------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n",
      "CPD of 'Average Daily PM2.5':\n",
      "+--------------------------+---------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| '\\% Smokers'             | '\\% Smokers'(0)     | '\\% Smokers'(1)     | '\\% Smokers'(2)     | '\\% Smokers'(3)     | '\\% Smokers'(4)     |\n",
      "+--------------------------+---------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| 'Average Daily PM2.5'(0) | 0.30051150895140666 | 0.26688102893890675 | 0.1943231441048035  | 0.14647377938517178 | 0.09424083769633508 |\n",
      "+--------------------------+---------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| 'Average Daily PM2.5'(1) | 0.26982097186700765 | 0.2508038585209003  | 0.1572052401746725  | 0.09584086799276673 | 0.17015706806282724 |\n",
      "+--------------------------+---------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| 'Average Daily PM2.5'(2) | 0.2071611253196931  | 0.1832797427652733  | 0.2314410480349345  | 0.19168173598553345 | 0.15968586387434555 |\n",
      "+--------------------------+---------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| 'Average Daily PM2.5'(3) | 0.15089514066496162 | 0.1864951768488746  | 0.27729257641921395 | 0.28390596745027125 | 0.22251308900523561 |\n",
      "+--------------------------+---------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| 'Average Daily PM2.5'(4) | 0.07161125319693094 | 0.11254019292604502 | 0.13973799126637554 | 0.2820976491862568  | 0.35340314136125656 |\n",
      "+--------------------------+---------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "CPD of 'Violent Crime Rate':\n",
      "+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+\n",
      "| '80/20 Income Ratio'    | '80/20 Income Ratio'(0) | '80/20 Income Ratio'(1) | '80/20 Income Ratio'(2) | '80/20 Income Ratio'(3) | '80/20 Income Ratio'(4) |\n",
      "+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+\n",
      "| 'Violent Crime Rate'(0) | 0.3253012048192771      | 0.233201581027668       | 0.14935064935064934     | 0.13793103448275862     | 0.1226215644820296      |\n",
      "+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+\n",
      "| 'Violent Crime Rate'(1) | 0.2685025817555938      | 0.274703557312253       | 0.19480519480519481     | 0.1336206896551724      | 0.11205073995771671     |\n",
      "+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+\n",
      "| 'Violent Crime Rate'(2) | 0.21686746987951808     | 0.22134387351778656     | 0.23376623376623376     | 0.1961206896551724      | 0.12896405919661733     |\n",
      "+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+\n",
      "| 'Violent Crime Rate'(3) | 0.13941480206540446     | 0.16600790513833993     | 0.24458874458874458     | 0.23706896551724138     | 0.2219873150105708      |\n",
      "+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+\n",
      "| 'Violent Crime Rate'(4) | 0.04991394148020654     | 0.10474308300395258     | 0.1774891774891775      | 0.2952586206896552      | 0.4143763213530655      |\n",
      "+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+-------------------------+\n",
      "CPD of '\\% Children in Poverty':\n",
      "+-----------------------------+----------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| '\\% Smokers'                | '\\% Smokers'(0)      | '\\% Smokers'(1)     | '\\% Smokers'(2)     | '\\% Smokers'(3)     | '\\% Smokers'(4)     |\n",
      "+-----------------------------+----------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| '\\% Children in Poverty'(0) | 0.4514066496163683   | 0.27009646302250806 | 0.15502183406113537 | 0.0379746835443038  | 0.0                 |\n",
      "+-----------------------------+----------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| '\\% Children in Poverty'(1) | 0.2595907928388747   | 0.24115755627009647 | 0.27510917030567683 | 0.17721518987341772 | 0.03926701570680628 |\n",
      "+-----------------------------+----------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| '\\% Children in Poverty'(2) | 0.1815856777493606   | 0.2379421221864952  | 0.2292576419213974  | 0.29475587703435807 | 0.1518324607329843  |\n",
      "+-----------------------------+----------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| '\\% Children in Poverty'(3) | 0.07289002557544758  | 0.19614147909967847 | 0.17467248908296942 | 0.2332730560578662  | 0.3219895287958115  |\n",
      "+-----------------------------+----------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "| '\\% Children in Poverty'(4) | 0.034526854219948847 | 0.05466237942122187 | 0.16593886462882096 | 0.25678119349005424 | 0.4869109947643979  |\n",
      "+-----------------------------+----------------------+---------------------+---------------------+---------------------+---------------------+\n",
      "CPD of '\\% Obese':\n",
      "+---------------+----------------------+---------------------+---------------------+---------------------+----------------------+\n",
      "| '\\% Smokers'  | '\\% Smokers'(0)      | '\\% Smokers'(1)     | '\\% Smokers'(2)     | '\\% Smokers'(3)     | '\\% Smokers'(4)      |\n",
      "+---------------+----------------------+---------------------+---------------------+---------------------+----------------------+\n",
      "| '\\% Obese'(0) | 0.5153452685421995   | 0.3279742765273312  | 0.15283842794759825 | 0.07233273056057866 | 0.010471204188481676 |\n",
      "+---------------+----------------------+---------------------+---------------------+---------------------+----------------------+\n",
      "| '\\% Obese'(1) | 0.19948849104859334  | 0.21221864951768488 | 0.2292576419213974  | 0.12477396021699819 | 0.06544502617801047  |\n",
      "+---------------+----------------------+---------------------+---------------------+---------------------+----------------------+\n",
      "| '\\% Obese'(2) | 0.18286445012787725  | 0.24115755627009647 | 0.25109170305676853 | 0.2007233273056058  | 0.15968586387434555  |\n",
      "+---------------+----------------------+---------------------+---------------------+---------------------+----------------------+\n",
      "| '\\% Obese'(3) | 0.09718670076726342  | 0.19292604501607716 | 0.28820960698689957 | 0.3670886075949367  | 0.3403141361256545   |\n",
      "+---------------+----------------------+---------------------+---------------------+---------------------+----------------------+\n",
      "| '\\% Obese'(4) | 0.005115089514066497 | 0.02572347266881029 | 0.07860262008733625 | 0.23508137432188064 | 0.42408376963350786  |\n",
      "+---------------+----------------------+---------------------+---------------------+---------------------+----------------------+\n",
      "CPD of '\\% Smokers':\n",
      "+-----------------+----------+\n",
      "| '\\% Smokers'(0) | 0.314562 |\n",
      "+-----------------+----------+\n",
      "| '\\% Smokers'(1) | 0.125101 |\n",
      "+-----------------+----------+\n",
      "| '\\% Smokers'(2) | 0.184232 |\n",
      "+-----------------+----------+\n",
      "| '\\% Smokers'(3) | 0.222446 |\n",
      "+-----------------+----------+\n",
      "| '\\% Smokers'(4) | 0.15366  |\n",
      "+-----------------+----------+\n"
     ]
    }
   ],
   "source": [
    "model = BayesianModel(best_model.edges())\n",
    "model.fit(data_hc, estimator = MaximumLikelihoodEstimator)\n",
    "for cpd in model.get_cpds():\n",
    "    print(\"CPD of {variable}:\".format(variable = cpd.variable))\n",
    "    print(cpd)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [],
   "source": [
    "def LL(x,model,verbose=False):\n",
    "    loglike = 0\n",
    "    for cpd in model.get_cpds():\n",
    "        temp_cpd = cpd.copy()\n",
    "        thevariable = temp_cpd.variable\n",
    "        theparents = model.predecessors(thevariable)\n",
    "        for parent in theparents:\n",
    "            temp_cpd.reduce([(parent, x[parent])])\n",
    "        theprob = temp_cpd.get_values()[x[thevariable],0]\n",
    "        if verbose:\n",
    "            print(thevariable,theparents,theprob)\n",
    "        loglike += np.log(theprob)\n",
    "    return loglike"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-14.028248031369452"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "exmp = data_hc.apply(lambda x: LL(x,model),axis=1)\n",
    "exmp.min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pylab as plt\n",
    "plt.figure(figsize=(20,5))\n",
    "plt.scatter(range(len(exmp)),exmp)\n",
    "plt.plot(exmp,\"r--\")\n",
    "plt.xlim(0, 2500)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (b) Which 5 counties have the lowest (most negative) log-likelihood values? Please show a ranked list of the top counties' names and log-likelihood values. (10 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "County\n",
       "Montgomery, Virginia          -14.028248\n",
       "Harrisonburg City, Virginia   -13.929264\n",
       "La Paz, Arizona               -13.743477\n",
       "Highlands, Florida            -13.348434\n",
       "Lafayette, Louisiana          -13.302995\n",
       "dtype: float64"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top5 = pd.Series(exmp)\n",
    "top5.index = data1.County\n",
    "top5.sort_values().head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 2: Cluster based anomaly detection.  Use all numeric features for this part, and do not discretize."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>'\\% Reporting Fair/Poor Health'</th>\n",
       "      <th>'Physically Unhealthy Days Per Month'</th>\n",
       "      <th>'Mentally Unhealthy Days Per Month'</th>\n",
       "      <th>'\\% Low birth weight births'</th>\n",
       "      <th>'\\% Smokers'</th>\n",
       "      <th>'\\% Obese'</th>\n",
       "      <th>'Food Environment Index'</th>\n",
       "      <th>'\\% Physically Inactive'</th>\n",
       "      <th>'\\% With Access To Exercise'</th>\n",
       "      <th>...</th>\n",
       "      <th>'\\% Children in Poverty'</th>\n",
       "      <th>'80/20 Income Ratio'</th>\n",
       "      <th>'\\% Single-Parent Households'</th>\n",
       "      <th>'Association Rate'</th>\n",
       "      <th>'Violent Crime Rate'</th>\n",
       "      <th>'Injury Death Rate'</th>\n",
       "      <th>'Average Daily PM2.5'</th>\n",
       "      <th>'\\% Severe Housing Problems'</th>\n",
       "      <th>'\\% Drive Alone'</th>\n",
       "      <th>'\\% Long Commute - Drives Alone'</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Autauga, Alabama</td>\n",
       "      <td>19.0</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>7.1</td>\n",
       "      <td>29.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>...</td>\n",
       "      <td>18.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>27.0</td>\n",
       "      <td>13.8</td>\n",
       "      <td>254.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>12.9</td>\n",
       "      <td>14.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Baldwin, Alabama</td>\n",
       "      <td>16.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.2</td>\n",
       "      <td>9.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>25.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>...</td>\n",
       "      <td>20.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>28.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>221.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Barbour, Alabama</td>\n",
       "      <td>26.0</td>\n",
       "      <td>4.9</td>\n",
       "      <td>4.7</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>33.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>...</td>\n",
       "      <td>38.0</td>\n",
       "      <td>5.3</td>\n",
       "      <td>54.0</td>\n",
       "      <td>8.1</td>\n",
       "      <td>147.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>12.6</td>\n",
       "      <td>18.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Bibb, Alabama</td>\n",
       "      <td>22.0</td>\n",
       "      <td>4.8</td>\n",
       "      <td>4.6</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>7.4</td>\n",
       "      <td>33.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>...</td>\n",
       "      <td>27.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>32.0</td>\n",
       "      <td>9.8</td>\n",
       "      <td>236.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>12.9</td>\n",
       "      <td>13.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Blount, Alabama</td>\n",
       "      <td>21.0</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>29.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>...</td>\n",
       "      <td>24.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>8.5</td>\n",
       "      <td>219.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>12.7</td>\n",
       "      <td>12.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>59.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             County  '\\% Reporting Fair/Poor Health'  \\\n",
       "0  Autauga, Alabama                             19.0   \n",
       "1  Baldwin, Alabama                             16.0   \n",
       "2  Barbour, Alabama                             26.0   \n",
       "3     Bibb, Alabama                             22.0   \n",
       "4   Blount, Alabama                             21.0   \n",
       "\n",
       "   'Physically Unhealthy Days Per Month'  'Mentally Unhealthy Days Per Month'  \\\n",
       "0                                    4.4                                  4.3   \n",
       "1                                    4.1                                  4.2   \n",
       "2                                    4.9                                  4.7   \n",
       "3                                    4.8                                  4.6   \n",
       "4                                    4.6                                  4.5   \n",
       "\n",
       "   '\\% Low birth weight births'  '\\% Smokers'  '\\% Obese'  \\\n",
       "0                           9.0          19.0        31.0   \n",
       "1                           9.0          19.0        27.0   \n",
       "2                          12.0          21.0        41.0   \n",
       "3                          12.0          21.0        40.0   \n",
       "4                           7.0          19.0        32.0   \n",
       "\n",
       "   'Food Environment Index'  '\\% Physically Inactive'  \\\n",
       "0                       7.1                      29.0   \n",
       "1                       7.6                      25.0   \n",
       "2                       5.1                      33.0   \n",
       "3                       7.4                      33.0   \n",
       "4                       8.3                      29.0   \n",
       "\n",
       "   '\\% With Access To Exercise'  ...  '\\% Children in Poverty'  \\\n",
       "0                          71.0  ...                      18.0   \n",
       "1                          72.0  ...                      20.0   \n",
       "2                          45.0  ...                      38.0   \n",
       "3                          33.0  ...                      27.0   \n",
       "4                          26.0  ...                      24.0   \n",
       "\n",
       "   '80/20 Income Ratio'  '\\% Single-Parent Households'  'Association Rate'  \\\n",
       "0                   4.3                           27.0                13.8   \n",
       "1                   4.5                           28.0                12.0   \n",
       "2                   5.3                           54.0                 8.1   \n",
       "3                   4.3                           32.0                 9.8   \n",
       "4                   4.1                           28.0                 8.5   \n",
       "\n",
       "   'Violent Crime Rate'  'Injury Death Rate'  'Average Daily PM2.5'  \\\n",
       "0                 254.0                 76.0                   12.9   \n",
       "1                 221.0                 70.0                   13.1   \n",
       "2                 147.0                 64.0                   12.6   \n",
       "3                 236.0                 75.0                   12.9   \n",
       "4                 219.0                 89.0                   12.7   \n",
       "\n",
       "   '\\% Severe Housing Problems'  '\\% Drive Alone'  \\\n",
       "0                          14.0              89.0   \n",
       "1                          15.0              84.0   \n",
       "2                          18.0              84.0   \n",
       "3                          13.0              84.0   \n",
       "4                          12.0              85.0   \n",
       "\n",
       "   '\\% Long Commute - Drives Alone'  \n",
       "0                              42.0  \n",
       "1                              37.0  \n",
       "2                              35.0  \n",
       "3                              46.0  \n",
       "4                              59.0  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>'\\% Reporting Fair/Poor Health'</th>\n",
       "      <th>'Physically Unhealthy Days Per Month'</th>\n",
       "      <th>'Mentally Unhealthy Days Per Month'</th>\n",
       "      <th>'\\% Low birth weight births'</th>\n",
       "      <th>'\\% Smokers'</th>\n",
       "      <th>'\\% Obese'</th>\n",
       "      <th>'Food Environment Index'</th>\n",
       "      <th>'\\% Physically Inactive'</th>\n",
       "      <th>'\\% With Access To Exercise'</th>\n",
       "      <th>...</th>\n",
       "      <th>'\\% Children in Poverty'</th>\n",
       "      <th>'80/20 Income Ratio'</th>\n",
       "      <th>'\\% Single-Parent Households'</th>\n",
       "      <th>'Association Rate'</th>\n",
       "      <th>'Violent Crime Rate'</th>\n",
       "      <th>'Injury Death Rate'</th>\n",
       "      <th>'Average Daily PM2.5'</th>\n",
       "      <th>'\\% Severe Housing Problems'</th>\n",
       "      <th>'\\% Drive Alone'</th>\n",
       "      <th>'\\% Long Commute - Drives Alone'</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Autauga, Alabama</td>\n",
       "      <td>19.0</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>7.1</td>\n",
       "      <td>29.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>...</td>\n",
       "      <td>18.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>27.0</td>\n",
       "      <td>13.8</td>\n",
       "      <td>254.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>12.9</td>\n",
       "      <td>14.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Baldwin, Alabama</td>\n",
       "      <td>16.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.2</td>\n",
       "      <td>9.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>25.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>...</td>\n",
       "      <td>20.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>28.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>221.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Barbour, Alabama</td>\n",
       "      <td>26.0</td>\n",
       "      <td>4.9</td>\n",
       "      <td>4.7</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>33.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>...</td>\n",
       "      <td>38.0</td>\n",
       "      <td>5.3</td>\n",
       "      <td>54.0</td>\n",
       "      <td>8.1</td>\n",
       "      <td>147.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>12.6</td>\n",
       "      <td>18.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Bibb, Alabama</td>\n",
       "      <td>22.0</td>\n",
       "      <td>4.8</td>\n",
       "      <td>4.6</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>7.4</td>\n",
       "      <td>33.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>...</td>\n",
       "      <td>27.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>32.0</td>\n",
       "      <td>9.8</td>\n",
       "      <td>236.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>12.9</td>\n",
       "      <td>13.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Blount, Alabama</td>\n",
       "      <td>21.0</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>29.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>...</td>\n",
       "      <td>24.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>8.5</td>\n",
       "      <td>219.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>12.7</td>\n",
       "      <td>12.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>59.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             County  '\\% Reporting Fair/Poor Health'  \\\n",
       "0  Autauga, Alabama                             19.0   \n",
       "1  Baldwin, Alabama                             16.0   \n",
       "2  Barbour, Alabama                             26.0   \n",
       "3     Bibb, Alabama                             22.0   \n",
       "4   Blount, Alabama                             21.0   \n",
       "\n",
       "   'Physically Unhealthy Days Per Month'  'Mentally Unhealthy Days Per Month'  \\\n",
       "0                                    4.4                                  4.3   \n",
       "1                                    4.1                                  4.2   \n",
       "2                                    4.9                                  4.7   \n",
       "3                                    4.8                                  4.6   \n",
       "4                                    4.6                                  4.5   \n",
       "\n",
       "   '\\% Low birth weight births'  '\\% Smokers'  '\\% Obese'  \\\n",
       "0                           9.0          19.0        31.0   \n",
       "1                           9.0          19.0        27.0   \n",
       "2                          12.0          21.0        41.0   \n",
       "3                          12.0          21.0        40.0   \n",
       "4                           7.0          19.0        32.0   \n",
       "\n",
       "   'Food Environment Index'  '\\% Physically Inactive'  \\\n",
       "0                       7.1                      29.0   \n",
       "1                       7.6                      25.0   \n",
       "2                       5.1                      33.0   \n",
       "3                       7.4                      33.0   \n",
       "4                       8.3                      29.0   \n",
       "\n",
       "   '\\% With Access To Exercise'  ...  '\\% Children in Poverty'  \\\n",
       "0                          71.0  ...                      18.0   \n",
       "1                          72.0  ...                      20.0   \n",
       "2                          45.0  ...                      38.0   \n",
       "3                          33.0  ...                      27.0   \n",
       "4                          26.0  ...                      24.0   \n",
       "\n",
       "   '80/20 Income Ratio'  '\\% Single-Parent Households'  'Association Rate'  \\\n",
       "0                   4.3                           27.0                13.8   \n",
       "1                   4.5                           28.0                12.0   \n",
       "2                   5.3                           54.0                 8.1   \n",
       "3                   4.3                           32.0                 9.8   \n",
       "4                   4.1                           28.0                 8.5   \n",
       "\n",
       "   'Violent Crime Rate'  'Injury Death Rate'  'Average Daily PM2.5'  \\\n",
       "0                 254.0                 76.0                   12.9   \n",
       "1                 221.0                 70.0                   13.1   \n",
       "2                 147.0                 64.0                   12.6   \n",
       "3                 236.0                 75.0                   12.9   \n",
       "4                 219.0                 89.0                   12.7   \n",
       "\n",
       "   '\\% Severe Housing Problems'  '\\% Drive Alone'  \\\n",
       "0                          14.0              89.0   \n",
       "1                          15.0              84.0   \n",
       "2                          18.0              84.0   \n",
       "3                          13.0              84.0   \n",
       "4                          12.0              85.0   \n",
       "\n",
       "   '\\% Long Commute - Drives Alone'  \n",
       "0                              42.0  \n",
       "1                              37.0  \n",
       "2                              35.0  \n",
       "3                              46.0  \n",
       "4                              59.0  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2 = data.copy()\n",
    "data2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "County                                   0\n",
       "'\\% Reporting Fair/Poor Health'          0\n",
       "'Physically Unhealthy Days Per Month'    0\n",
       "'Mentally Unhealthy Days Per Month'      0\n",
       "'\\% Low birth weight births'             0\n",
       "'\\% Smokers'                             0\n",
       "'\\% Obese'                               0\n",
       "'Food Environment Index'                 0\n",
       "'\\% Physically Inactive'                 0\n",
       "'\\% With Access To Exercise'             0\n",
       "'\\% Excessive Drinking'                  0\n",
       "'\\% Alcohol-Impaired Driving Deaths'     0\n",
       "'Chlamydia Rate'                         0\n",
       "'Teen Birth Rate'                        0\n",
       "'\\% Uninsured'                           0\n",
       "'Preventable Hosp. Rate'                 0\n",
       "'\\% Dibetics receiving HbA1c'            0\n",
       "'\\% Mammography'                         0\n",
       "'Graduation Rate'                        0\n",
       "'\\% Some College'                        0\n",
       "'\\% Unemployed'                          0\n",
       "'\\% Children in Poverty'                 0\n",
       "'80/20 Income Ratio'                     0\n",
       "'\\% Single-Parent Households'            0\n",
       "'Association Rate'                       0\n",
       "'Violent Crime Rate'                     0\n",
       "'Injury Death Rate'                      0\n",
       "'Average Daily PM2.5'                    0\n",
       "'\\% Severe Housing Problems'             0\n",
       "'\\% Drive Alone'                         0\n",
       "'\\% Long Commute - Drives Alone'         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2486, 31)"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (a) Clustering with k-means. Please use k=3 clusters. Compute each record's distance to the nearest cluster center and report the five counties which have the longest distances. (10 pts)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>215.546368</td>\n",
       "      <td>554.609617</td>\n",
       "      <td>101.895485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>108.370262</td>\n",
       "      <td>655.932344</td>\n",
       "      <td>186.335226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>410.503731</td>\n",
       "      <td>530.643663</td>\n",
       "      <td>282.291939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>168.209200</td>\n",
       "      <td>602.378878</td>\n",
       "      <td>141.457457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>105.075152</td>\n",
       "      <td>777.335076</td>\n",
       "      <td>315.009861</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            0           1           2\n",
       "0  215.546368  554.609617  101.895485\n",
       "1  108.370262  655.932344  186.335226\n",
       "2  410.503731  530.643663  282.291939\n",
       "3  168.209200  602.378878  141.457457\n",
       "4  105.075152  777.335076  315.009861"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "KM = KMeans(n_clusters = 3,random_state = 999)\n",
    "X = data2.iloc[:,1:]\n",
    "score = KM.fit_predict(X)\n",
    "\n",
    "# distance to each cluster center\n",
    "res = pd.DataFrame(KM.transform(X))\n",
    "res.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>cluster</th>\n",
       "      <th>score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>215.546368</td>\n",
       "      <td>554.609617</td>\n",
       "      <td>101.895485</td>\n",
       "      <td>2</td>\n",
       "      <td>101.895485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>108.370262</td>\n",
       "      <td>655.932344</td>\n",
       "      <td>186.335226</td>\n",
       "      <td>0</td>\n",
       "      <td>108.370262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>410.503731</td>\n",
       "      <td>530.643663</td>\n",
       "      <td>282.291939</td>\n",
       "      <td>2</td>\n",
       "      <td>282.291939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>168.209200</td>\n",
       "      <td>602.378878</td>\n",
       "      <td>141.457457</td>\n",
       "      <td>2</td>\n",
       "      <td>141.457457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>105.075152</td>\n",
       "      <td>777.335076</td>\n",
       "      <td>315.009861</td>\n",
       "      <td>0</td>\n",
       "      <td>105.075152</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            0           1           2  cluster       score\n",
       "0  215.546368  554.609617  101.895485        2  101.895485\n",
       "1  108.370262  655.932344  186.335226        0  108.370262\n",
       "2  410.503731  530.643663  282.291939        2  282.291939\n",
       "3  168.209200  602.378878  141.457457        2  141.457457\n",
       "4  105.075152  777.335076  315.009861        0  105.075152"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# add cluster and distance information for each data record\n",
    "res=pd.DataFrame(KM.transform(X))\n",
    "res=pd.concat((res,pd.DataFrame(KM.fit_predict(X))),axis=1)\n",
    "res.columns=list(range(3))+[\"cluster\"]\n",
    "res.loc[:,\"score\"]=res.apply(lambda x: x[int(x[\"cluster\"])],axis=1)\n",
    "\n",
    "# find data records farthest from cluster centers\n",
    "res.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2486, 5)"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "county = data2.County\n",
    "county.reset_index(inplace = True, drop = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>cluster</th>\n",
       "      <th>score</th>\n",
       "      <th>county</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>1890</td>\n",
       "      <td>2443.716031</td>\n",
       "      <td>1970.018443</td>\n",
       "      <td>2251.260167</td>\n",
       "      <td>1</td>\n",
       "      <td>1970.018443</td>\n",
       "      <td>Shannon, South Dakota</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1294</td>\n",
       "      <td>2036.147297</td>\n",
       "      <td>1332.735955</td>\n",
       "      <td>1759.249198</td>\n",
       "      <td>1</td>\n",
       "      <td>1332.735955</td>\n",
       "      <td>St. Louis City, Missouri</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>96</td>\n",
       "      <td>1917.732820</td>\n",
       "      <td>1208.900834</td>\n",
       "      <td>1639.063836</td>\n",
       "      <td>1</td>\n",
       "      <td>1208.900834</td>\n",
       "      <td>Crittenden, Arkansas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2304</td>\n",
       "      <td>1644.876605</td>\n",
       "      <td>1017.910163</td>\n",
       "      <td>1394.632068</td>\n",
       "      <td>1</td>\n",
       "      <td>1017.910163</td>\n",
       "      <td>Petersburg City, Virginia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>995</td>\n",
       "      <td>1651.954082</td>\n",
       "      <td>918.374430</td>\n",
       "      <td>1366.737248</td>\n",
       "      <td>1</td>\n",
       "      <td>918.374430</td>\n",
       "      <td>Baltimore City, Maryland</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                0            1            2  cluster        score  \\\n",
       "1890  2443.716031  1970.018443  2251.260167        1  1970.018443   \n",
       "1294  2036.147297  1332.735955  1759.249198        1  1332.735955   \n",
       "96    1917.732820  1208.900834  1639.063836        1  1208.900834   \n",
       "2304  1644.876605  1017.910163  1394.632068        1  1017.910163   \n",
       "995   1651.954082   918.374430  1366.737248        1   918.374430   \n",
       "\n",
       "                         county  \n",
       "1890      Shannon, South Dakota  \n",
       "1294   St. Louis City, Missouri  \n",
       "96         Crittenden, Arkansas  \n",
       "2304  Petersburg City, Virginia  \n",
       "995    Baltimore City, Maryland  "
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res['county'] = county\n",
    "res.sort_values('score', ascending = False)[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1426\n",
       "1     246\n",
       "2     814\n",
       "Name: cluster, dtype: int64"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res['cluster'].value_counts().sort_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (b) Cluster with Gaussian Mixture. Please repeat (2)a but use log-likelihood for each record (rather than distance) as the measure of anomalousness. (10 pts)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GaussianMixture(covariance_type='full', init_params='kmeans', max_iter=100,\n",
       "                means_init=None, n_components=3, n_init=1, precisions_init=None,\n",
       "                random_state=999, reg_covar=1e-06, tol=0.001, verbose=0,\n",
       "                verbose_interval=10, warm_start=False, weights_init=None)"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.mixture import GaussianMixture\n",
    "GM=GaussianMixture(n_components=3,random_state=999)\n",
    "GM.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# score_samples function gives the log of the probability density of each data record given its cluster.\n",
    "# Note that probability densities can exceed 1 (unlike probabilities of discrete data).\n",
    "import matplotlib.pylab as plt\n",
    "plt.figure(figsize=(20,4))\n",
    "plt.scatter(range(len(X)),GM.score_samples(X))\n",
    "plt.plot(GM.score_samples(X),\"r--\")\n",
    "plt.xlim(-20, 2500)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>county</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>1890</td>\n",
       "      <td>-197.420106</td>\n",
       "      <td>Shannon, South Dakota</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>66</td>\n",
       "      <td>-133.042814</td>\n",
       "      <td>Apache, Arizona</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1444</td>\n",
       "      <td>-131.452092</td>\n",
       "      <td>New York, New York</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2158</td>\n",
       "      <td>-129.450559</td>\n",
       "      <td>Willacy, Texas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1577</td>\n",
       "      <td>-126.696033</td>\n",
       "      <td>Roulette, North Dakota</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               0                  county\n",
       "1890 -197.420106   Shannon, South Dakota\n",
       "66   -133.042814         Apache, Arizona\n",
       "1444 -131.452092      New York, New York\n",
       "2158 -129.450559          Willacy, Texas\n",
       "1577 -126.696033  Roulette, North Dakota"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log = pd.DataFrame(GM.score_samples(X))\n",
    "log['county'] = county\n",
    "# 5 most anomalous data points by log-likelihood (i.e. log probability density)\n",
    "log.sort_values(0)[:5]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Part 3: Choose one more anomaly detection model you prefer and report the top 5 most anomalous counties by the model you chose.  (10 pts)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>'\\% Reporting Fair/Poor Health'</th>\n",
       "      <th>'Physically Unhealthy Days Per Month'</th>\n",
       "      <th>'Mentally Unhealthy Days Per Month'</th>\n",
       "      <th>'\\% Low birth weight births'</th>\n",
       "      <th>'\\% Smokers'</th>\n",
       "      <th>'\\% Obese'</th>\n",
       "      <th>'Food Environment Index'</th>\n",
       "      <th>'\\% Physically Inactive'</th>\n",
       "      <th>'\\% With Access To Exercise'</th>\n",
       "      <th>...</th>\n",
       "      <th>'\\% Children in Poverty'</th>\n",
       "      <th>'80/20 Income Ratio'</th>\n",
       "      <th>'\\% Single-Parent Households'</th>\n",
       "      <th>'Association Rate'</th>\n",
       "      <th>'Violent Crime Rate'</th>\n",
       "      <th>'Injury Death Rate'</th>\n",
       "      <th>'Average Daily PM2.5'</th>\n",
       "      <th>'\\% Severe Housing Problems'</th>\n",
       "      <th>'\\% Drive Alone'</th>\n",
       "      <th>'\\% Long Commute - Drives Alone'</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Autauga, Alabama</td>\n",
       "      <td>19.0</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>7.1</td>\n",
       "      <td>29.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>...</td>\n",
       "      <td>18.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>27.0</td>\n",
       "      <td>13.8</td>\n",
       "      <td>254.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>12.9</td>\n",
       "      <td>14.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Baldwin, Alabama</td>\n",
       "      <td>16.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.2</td>\n",
       "      <td>9.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>25.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>...</td>\n",
       "      <td>20.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>28.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>221.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Barbour, Alabama</td>\n",
       "      <td>26.0</td>\n",
       "      <td>4.9</td>\n",
       "      <td>4.7</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>33.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>...</td>\n",
       "      <td>38.0</td>\n",
       "      <td>5.3</td>\n",
       "      <td>54.0</td>\n",
       "      <td>8.1</td>\n",
       "      <td>147.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>12.6</td>\n",
       "      <td>18.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Bibb, Alabama</td>\n",
       "      <td>22.0</td>\n",
       "      <td>4.8</td>\n",
       "      <td>4.6</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>7.4</td>\n",
       "      <td>33.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>...</td>\n",
       "      <td>27.0</td>\n",
       "      <td>4.3</td>\n",
       "      <td>32.0</td>\n",
       "      <td>9.8</td>\n",
       "      <td>236.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>12.9</td>\n",
       "      <td>13.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Blount, Alabama</td>\n",
       "      <td>21.0</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>29.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>...</td>\n",
       "      <td>24.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>8.5</td>\n",
       "      <td>219.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>12.7</td>\n",
       "      <td>12.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>59.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             County  '\\% Reporting Fair/Poor Health'  \\\n",
       "0  Autauga, Alabama                             19.0   \n",
       "1  Baldwin, Alabama                             16.0   \n",
       "2  Barbour, Alabama                             26.0   \n",
       "3     Bibb, Alabama                             22.0   \n",
       "4   Blount, Alabama                             21.0   \n",
       "\n",
       "   'Physically Unhealthy Days Per Month'  'Mentally Unhealthy Days Per Month'  \\\n",
       "0                                    4.4                                  4.3   \n",
       "1                                    4.1                                  4.2   \n",
       "2                                    4.9                                  4.7   \n",
       "3                                    4.8                                  4.6   \n",
       "4                                    4.6                                  4.5   \n",
       "\n",
       "   '\\% Low birth weight births'  '\\% Smokers'  '\\% Obese'  \\\n",
       "0                           9.0          19.0        31.0   \n",
       "1                           9.0          19.0        27.0   \n",
       "2                          12.0          21.0        41.0   \n",
       "3                          12.0          21.0        40.0   \n",
       "4                           7.0          19.0        32.0   \n",
       "\n",
       "   'Food Environment Index'  '\\% Physically Inactive'  \\\n",
       "0                       7.1                      29.0   \n",
       "1                       7.6                      25.0   \n",
       "2                       5.1                      33.0   \n",
       "3                       7.4                      33.0   \n",
       "4                       8.3                      29.0   \n",
       "\n",
       "   '\\% With Access To Exercise'  ...  '\\% Children in Poverty'  \\\n",
       "0                          71.0  ...                      18.0   \n",
       "1                          72.0  ...                      20.0   \n",
       "2                          45.0  ...                      38.0   \n",
       "3                          33.0  ...                      27.0   \n",
       "4                          26.0  ...                      24.0   \n",
       "\n",
       "   '80/20 Income Ratio'  '\\% Single-Parent Households'  'Association Rate'  \\\n",
       "0                   4.3                           27.0                13.8   \n",
       "1                   4.5                           28.0                12.0   \n",
       "2                   5.3                           54.0                 8.1   \n",
       "3                   4.3                           32.0                 9.8   \n",
       "4                   4.1                           28.0                 8.5   \n",
       "\n",
       "   'Violent Crime Rate'  'Injury Death Rate'  'Average Daily PM2.5'  \\\n",
       "0                 254.0                 76.0                   12.9   \n",
       "1                 221.0                 70.0                   13.1   \n",
       "2                 147.0                 64.0                   12.6   \n",
       "3                 236.0                 75.0                   12.9   \n",
       "4                 219.0                 89.0                   12.7   \n",
       "\n",
       "   '\\% Severe Housing Problems'  '\\% Drive Alone'  \\\n",
       "0                          14.0              89.0   \n",
       "1                          15.0              84.0   \n",
       "2                          18.0              84.0   \n",
       "3                          13.0              84.0   \n",
       "4                          12.0              85.0   \n",
       "\n",
       "   '\\% Long Commute - Drives Alone'  \n",
       "0                              42.0  \n",
       "1                              37.0  \n",
       "2                              35.0  \n",
       "3                              46.0  \n",
       "4                              59.0  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data3 = data2.copy()\n",
    "data3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = data3.iloc[:,1:]\n",
    "y = data3.iloc[:,1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>'\\% Reporting Fair/Poor Health'</th>\n",
       "      <th>'Physically Unhealthy Days Per Month'</th>\n",
       "      <th>'Mentally Unhealthy Days Per Month'</th>\n",
       "      <th>'\\% Low birth weight births'</th>\n",
       "      <th>'\\% Smokers'</th>\n",
       "      <th>'\\% Obese'</th>\n",
       "      <th>'Food Environment Index'</th>\n",
       "      <th>'\\% Physically Inactive'</th>\n",
       "      <th>'\\% With Access To Exercise'</th>\n",
       "      <th>'\\% Excessive Drinking'</th>\n",
       "      <th>...</th>\n",
       "      <th>'\\% Children in Poverty'</th>\n",
       "      <th>'80/20 Income Ratio'</th>\n",
       "      <th>'\\% Single-Parent Households'</th>\n",
       "      <th>'Association Rate'</th>\n",
       "      <th>'Violent Crime Rate'</th>\n",
       "      <th>'Injury Death Rate'</th>\n",
       "      <th>'Average Daily PM2.5'</th>\n",
       "      <th>'\\% Severe Housing Problems'</th>\n",
       "      <th>'\\% Drive Alone'</th>\n",
       "      <th>'\\% Long Commute - Drives Alone'</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "      <td>2486.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>17.203942</td>\n",
       "      <td>3.865809</td>\n",
       "      <td>3.753097</td>\n",
       "      <td>8.222446</td>\n",
       "      <td>18.569992</td>\n",
       "      <td>31.022928</td>\n",
       "      <td>7.093242</td>\n",
       "      <td>27.162108</td>\n",
       "      <td>63.002011</td>\n",
       "      <td>16.604988</td>\n",
       "      <td>...</td>\n",
       "      <td>23.844730</td>\n",
       "      <td>4.545133</td>\n",
       "      <td>33.345937</td>\n",
       "      <td>12.731175</td>\n",
       "      <td>267.538616</td>\n",
       "      <td>74.454545</td>\n",
       "      <td>11.720072</td>\n",
       "      <td>14.958568</td>\n",
       "      <td>80.197908</td>\n",
       "      <td>30.881738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>4.856641</td>\n",
       "      <td>0.715394</td>\n",
       "      <td>0.581101</td>\n",
       "      <td>1.971016</td>\n",
       "      <td>3.646631</td>\n",
       "      <td>4.524278</td>\n",
       "      <td>1.069392</td>\n",
       "      <td>5.554257</td>\n",
       "      <td>22.020285</td>\n",
       "      <td>3.420385</td>\n",
       "      <td>...</td>\n",
       "      <td>8.692791</td>\n",
       "      <td>0.695486</td>\n",
       "      <td>9.383930</td>\n",
       "      <td>4.981697</td>\n",
       "      <td>198.532609</td>\n",
       "      <td>21.554035</td>\n",
       "      <td>1.535203</td>\n",
       "      <td>4.277249</td>\n",
       "      <td>5.945515</td>\n",
       "      <td>11.935865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>2.200000</td>\n",
       "      <td>2.100000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.700000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>3.400000</td>\n",
       "      <td>3.300000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>6.500000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>17.250000</td>\n",
       "      <td>4.100000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>9.300000</td>\n",
       "      <td>128.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>10.600000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>22.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>3.800000</td>\n",
       "      <td>3.800000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>4.400000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>12.100000</td>\n",
       "      <td>216.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>30.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4.400000</td>\n",
       "      <td>4.100000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>4.900000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>15.500000</td>\n",
       "      <td>356.750000</td>\n",
       "      <td>87.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>39.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>6.500000</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>8.700000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>1885.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>14.900000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>95.000000</td>\n",
       "      <td>72.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       '\\% Reporting Fair/Poor Health'  'Physically Unhealthy Days Per Month'  \\\n",
       "count                      2486.000000                            2486.000000   \n",
       "mean                         17.203942                               3.865809   \n",
       "std                           4.856641                               0.715394   \n",
       "min                           7.000000                               2.200000   \n",
       "25%                          13.000000                               3.400000   \n",
       "50%                          16.000000                               3.800000   \n",
       "75%                          20.000000                               4.400000   \n",
       "max                          42.000000                               6.500000   \n",
       "\n",
       "       'Mentally Unhealthy Days Per Month'  '\\% Low birth weight births'  \\\n",
       "count                          2486.000000                   2486.000000   \n",
       "mean                              3.753097                      8.222446   \n",
       "std                               0.581101                      1.971016   \n",
       "min                               2.100000                      3.000000   \n",
       "25%                               3.300000                      7.000000   \n",
       "50%                               3.800000                      8.000000   \n",
       "75%                               4.100000                      9.000000   \n",
       "max                               5.600000                     19.000000   \n",
       "\n",
       "       '\\% Smokers'   '\\% Obese'  'Food Environment Index'  \\\n",
       "count   2486.000000  2486.000000               2486.000000   \n",
       "mean      18.569992    31.022928                  7.093242   \n",
       "std        3.646631     4.524278                  1.069392   \n",
       "min        7.000000    11.000000                  0.500000   \n",
       "25%       16.000000    29.000000                  6.500000   \n",
       "50%       18.000000    31.000000                  7.200000   \n",
       "75%       21.000000    34.000000                  7.800000   \n",
       "max       41.000000    46.000000                 10.000000   \n",
       "\n",
       "       '\\% Physically Inactive'  '\\% With Access To Exercise'  \\\n",
       "count               2486.000000                   2486.000000   \n",
       "mean                  27.162108                     63.002011   \n",
       "std                    5.554257                     22.020285   \n",
       "min                    9.000000                      0.000000   \n",
       "25%                   24.000000                     48.000000   \n",
       "50%                   27.000000                     65.000000   \n",
       "75%                   31.000000                     80.000000   \n",
       "max                   42.000000                    100.000000   \n",
       "\n",
       "       '\\% Excessive Drinking'  ...  '\\% Children in Poverty'  \\\n",
       "count              2486.000000  ...               2486.000000   \n",
       "mean                 16.604988  ...                 23.844730   \n",
       "std                   3.420385  ...                  8.692791   \n",
       "min                   9.000000  ...                  3.000000   \n",
       "25%                  14.000000  ...                 17.250000   \n",
       "50%                  17.000000  ...                 23.000000   \n",
       "75%                  19.000000  ...                 29.000000   \n",
       "max                  27.000000  ...                 54.000000   \n",
       "\n",
       "       '80/20 Income Ratio'  '\\% Single-Parent Households'  \\\n",
       "count           2486.000000                    2486.000000   \n",
       "mean               4.545133                      33.345937   \n",
       "std                0.695486                       9.383930   \n",
       "min                2.700000                       1.000000   \n",
       "25%                4.100000                      27.000000   \n",
       "50%                4.400000                      33.000000   \n",
       "75%                4.900000                      38.000000   \n",
       "max                8.700000                      76.000000   \n",
       "\n",
       "       'Association Rate'  'Violent Crime Rate'  'Injury Death Rate'  \\\n",
       "count         2486.000000           2486.000000          2486.000000   \n",
       "mean            12.731175            267.538616            74.454545   \n",
       "std              4.981697            198.532609            21.554035   \n",
       "min              1.000000              0.000000            25.000000   \n",
       "25%              9.300000            128.000000            60.000000   \n",
       "50%             12.100000            216.000000            72.000000   \n",
       "75%             15.500000            356.750000            87.000000   \n",
       "max             41.000000           1885.000000           200.000000   \n",
       "\n",
       "       'Average Daily PM2.5'  '\\% Severe Housing Problems'  '\\% Drive Alone'  \\\n",
       "count            2486.000000                   2486.000000       2486.000000   \n",
       "mean               11.720072                     14.958568         80.197908   \n",
       "std                 1.535203                      4.277249          5.945515   \n",
       "min                 7.200000                      5.000000          6.000000   \n",
       "25%                10.600000                     12.000000         78.000000   \n",
       "50%                12.000000                     14.000000         81.000000   \n",
       "75%                13.000000                     17.000000         84.000000   \n",
       "max                14.900000                     44.000000         95.000000   \n",
       "\n",
       "       '\\% Long Commute - Drives Alone'  \n",
       "count                       2486.000000  \n",
       "mean                          30.881738  \n",
       "std                           11.935865  \n",
       "min                            3.000000  \n",
       "25%                           22.000000  \n",
       "50%                           30.000000  \n",
       "75%                           39.000000  \n",
       "max                           72.000000  \n",
       "\n",
       "[8 rows x 30 columns]"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data3.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import IsolationForest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.28402602, -1.08959478],\n",
       "       [-0.52357938, -0.0279797 ],\n",
       "       [ 5.57299675,  0.46251951],\n",
       "       ...,\n",
       "       [-0.76531161, -0.83703899],\n",
       "       [-2.0815728 , -0.21226248],\n",
       "       [-2.20245663, -0.90716049]])"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.decomposition import PCA\n",
    "scaler = StandardScaler()\n",
    "scaler.fit(X)\n",
    "X3 = pd.DataFrame(data = scaler.transform(X))\n",
    "pca = PCA(n_components = 2)\n",
    "X3 = pca.fit_transform(X3)\n",
    "X3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "# scaler.fit(X_test)\n",
    "# X_test = pd.DataFrame(data = scaler.transform(X_test))\n",
    "# # pca = PCA(n_components = 2)\n",
    "# X_test = pca.fit_transform(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:237: FutureWarning: default contamination parameter 0.1 will change in version 0.22 to \"auto\". This will change the predict method behavior.\n",
      "  FutureWarning)\n",
      "/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:247: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\n",
      "  FutureWarning)\n",
      "/opt/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/iforest.py:415: DeprecationWarning: threshold_ attribute is deprecated in 0.20 and will be removed in 0.22.\n",
      "  \" be removed in 0.22.\", DeprecationWarning)\n"
     ]
    }
   ],
   "source": [
    "# fit the model\n",
    "clf = IsolationForest(max_samples=100, random_state = np.random.RandomState(42))\n",
    "clf.fit(X3)\n",
    "y_pred = clf.predict(X3)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    }
   ],
   "source": [
    "X['anomaly'] = y_pred\n",
    "out = X[X['anomaly'] == -1]\n",
    "out['county']=county\n",
    "out = out.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       " 1    2237\n",
       "-1     249\n",
       "Name: anomaly, dtype: int64"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X['anomaly'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [],
   "source": [
    "# plt.figure(figsize=(10,10))\n",
    "\n",
    "# plt.title(\"IsolationForest\")\n",
    "# plt.contourf(xx, yy, Z, cmap=plt.cm.Blues_r)\n",
    "\n",
    "# b1 = plt.scatter(X_train[:, 0], X_train[:, 1], c='white')\n",
    "# b2 = plt.scatter(X_test[:, 0], X_test[:, 1], c='green')\n",
    "# plt.axis('tight')\n",
    "# plt.xlim((-5, 5))\n",
    "# plt.ylim((-5, 5))\n",
    "# plt.legend([b1, b2],\n",
    "#            [\"training observations\",\n",
    "#             \"predictions\"],\n",
    "#            loc=\"upper left\")\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Part 4: Compare and contrast the results from the different models.  Were there some counties that were found to be anomalous in some models and not in others?  Please provide some intuitions on why each county was found to be anomalous. (5 pts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The top 5 most anomalous counties according to each of the following models are:\n",
    "### 1. Bayesian Network: Montgomery, Virginia - Harrisonburg City, Virginia - La Paz, Arizona - Highlands, Florida - Lafayette, Louisiana  \n",
    "### 2. Clustering with k-means: Shannon, South Dakota - St. Louis City, Missour - Crittenden, Arkansas - Petersburg City, Virginia - Baltimore City, Maryland\n",
    "### 3. Clustering with Gaussian Mixture: Shannon, South Dakota - Apache, Arizona - New York, New York - Willacy, Texas - Roulette, North Dakota\n",
    "### 4. Isolation Forest: 249 anomalous counties"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Clustering has yield similar results in terms of the most anomalous county which is Shannon South Dakota. For Clustering with k-means, those counties were found to be anomalous as they were the furthest from all cluster centers. For Clustering with Gaussian Mixture, these counties were classified as the most anomalous ones because they are from the most dense clusters . For Bayesian Network, these counties had the highest probablity of being misclassified, which might probably due to lack of data for these specific counties to properly classify them. Finally, isolation forest yielded a high number of anomalous values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
